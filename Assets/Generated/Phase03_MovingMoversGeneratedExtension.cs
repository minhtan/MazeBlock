//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        static readonly Phase03_MovingMovers phase03_MovingMoversComponent = new Phase03_MovingMovers();

        public bool isPhase03_MovingMovers {
            get { return HasComponent(ComponentIds.Phase03_MovingMovers); }
            set {
                if(value != isPhase03_MovingMovers) {
                    if(value) {
                        AddComponent(ComponentIds.Phase03_MovingMovers, phase03_MovingMoversComponent);
                    } else {
                        RemoveComponent(ComponentIds.Phase03_MovingMovers);
                    }
                }
            }
        }

        public Entity IsPhase03_MovingMovers(bool value) {
            isPhase03_MovingMovers = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity phase03_MovingMoversEntity { get { return GetGroup(Matcher.Phase03_MovingMovers).GetSingleEntity(); } }

        public bool isPhase03_MovingMovers {
            get { return phase03_MovingMoversEntity != null; }
            set {
                var entity = phase03_MovingMoversEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isPhase03_MovingMovers = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }

    public partial class Matcher {

        static IMatcher _matcherPhase03_MovingMovers;

        public static IMatcher Phase03_MovingMovers {
            get {
                if(_matcherPhase03_MovingMovers == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Phase03_MovingMovers);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherPhase03_MovingMovers = matcher;
                }

                return _matcherPhase03_MovingMovers;
            }
        }
    }
}
