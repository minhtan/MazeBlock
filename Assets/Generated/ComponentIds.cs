//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentIndicesGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class ComponentIds {

    public const int BeingStoodOn = 0;
    public const int BoardSet = 1;
    public const int CameFrom = 2;
    public const int Coroutine = 3;
    public const int CoroutineQueue = 4;
    public const int DisableInput = 5;
    public const int Exit = 6;
    public const int FindPathDone = 7;
    public const int GameSettings = 8;
    public const int Goal = 9;
    public const int LastBlocked = 10;
    public const int MouseClick = 11;
    public const int MoveCost = 12;
    public const int Mover = 13;
    public const int MoveTo = 14;
    public const int Neighbors = 15;
    public const int Node = 16;
    public const int Path = 17;
    public const int PathView = 18;
    public const int Position = 19;
    public const int StandOn = 20;
    public const int TurnEnded = 21;
    public const int View = 22;

    public const int TotalComponents = 23;

    public static readonly string[] componentNames = {
        "BeingStoodOn",
        "BoardSet",
        "CameFrom",
        "Coroutine",
        "CoroutineQueue",
        "DisableInput",
        "Exit",
        "FindPathDone",
        "GameSettings",
        "Goal",
        "LastBlocked",
        "MouseClick",
        "MoveCost",
        "Mover",
        "MoveTo",
        "Neighbors",
        "Node",
        "Path",
        "PathView",
        "Position",
        "StandOn",
        "TurnEnded",
        "View"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(BeingStoodOn),
        typeof(BoardSet),
        typeof(CameFrom),
        typeof(Coroutine),
        typeof(CoroutineQueue),
        typeof(DisableInput),
        typeof(Exit),
        typeof(FindPathDone),
        typeof(GameSettings),
        typeof(Goal),
        typeof(LastBlocked),
        typeof(MouseClick),
        typeof(MoveCost),
        typeof(Mover),
        typeof(MoveTo),
        typeof(NeighborsComponent),
        typeof(NodeComponent),
        typeof(Path),
        typeof(PathView),
        typeof(Position),
        typeof(StandOn),
        typeof(TurnEnded),
        typeof(View)
    };
}
