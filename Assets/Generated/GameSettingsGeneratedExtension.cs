//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        public GameSettings gameSettings { get { return (GameSettings)GetComponent(ComponentIds.GameSettings); } }
        public bool hasGameSettings { get { return HasComponent(ComponentIds.GameSettings); } }

        public Entity AddGameSettings(int newRow, int newColumn, float newDistanceBtwNode) {
            var component = CreateComponent<GameSettings>(ComponentIds.GameSettings);
            component.row = newRow;
            component.column = newColumn;
            component.distanceBtwNode = newDistanceBtwNode;
            return AddComponent(ComponentIds.GameSettings, component);
        }

        public Entity ReplaceGameSettings(int newRow, int newColumn, float newDistanceBtwNode) {
            var component = CreateComponent<GameSettings>(ComponentIds.GameSettings);
            component.row = newRow;
            component.column = newColumn;
            component.distanceBtwNode = newDistanceBtwNode;
            ReplaceComponent(ComponentIds.GameSettings, component);
            return this;
        }

        public Entity RemoveGameSettings() {
            return RemoveComponent(ComponentIds.GameSettings);
        }
    }

    public partial class Pool {

        public Entity gameSettingsEntity { get { return GetGroup(Matcher.GameSettings).GetSingleEntity(); } }
        public GameSettings gameSettings { get { return gameSettingsEntity.gameSettings; } }
        public bool hasGameSettings { get { return gameSettingsEntity != null; } }

        public Entity SetGameSettings(int newRow, int newColumn, float newDistanceBtwNode) {
            if(hasGameSettings) {
                throw new EntitasException("Could not set gameSettings!\n" + this + " already has an entity with GameSettings!",
                    "You should check if the pool already has a gameSettingsEntity before setting it or use pool.ReplaceGameSettings().");
            }
            var entity = CreateEntity();
            entity.AddGameSettings(newRow, newColumn, newDistanceBtwNode);
            return entity;
        }

        public Entity ReplaceGameSettings(int newRow, int newColumn, float newDistanceBtwNode) {
            var entity = gameSettingsEntity;
            if(entity == null) {
                entity = SetGameSettings(newRow, newColumn, newDistanceBtwNode);
            } else {
                entity.ReplaceGameSettings(newRow, newColumn, newDistanceBtwNode);
            }

            return entity;
        }

        public void RemoveGameSettings() {
            DestroyEntity(gameSettingsEntity);
        }
    }

    public partial class Matcher {

        static IMatcher _matcherGameSettings;

        public static IMatcher GameSettings {
            get {
                if(_matcherGameSettings == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.GameSettings);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherGameSettings = matcher;
                }

                return _matcherGameSettings;
            }
        }
    }
}
