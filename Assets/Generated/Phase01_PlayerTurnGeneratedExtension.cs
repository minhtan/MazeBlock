//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        static readonly Phase01_PlayerTurn phase01_PlayerTurnComponent = new Phase01_PlayerTurn();

        public bool isPhase01_PlayerTurn {
            get { return HasComponent(ComponentIds.Phase01_PlayerTurn); }
            set {
                if(value != isPhase01_PlayerTurn) {
                    if(value) {
                        AddComponent(ComponentIds.Phase01_PlayerTurn, phase01_PlayerTurnComponent);
                    } else {
                        RemoveComponent(ComponentIds.Phase01_PlayerTurn);
                    }
                }
            }
        }

        public Entity IsPhase01_PlayerTurn(bool value) {
            isPhase01_PlayerTurn = value;
            return this;
        }
    }

    public partial class Pool {

        public Entity phase01_PlayerTurnEntity { get { return GetGroup(Matcher.Phase01_PlayerTurn).GetSingleEntity(); } }

        public bool isPhase01_PlayerTurn {
            get { return phase01_PlayerTurnEntity != null; }
            set {
                var entity = phase01_PlayerTurnEntity;
                if(value != (entity != null)) {
                    if(value) {
                        CreateEntity().isPhase01_PlayerTurn = true;
                    } else {
                        DestroyEntity(entity);
                    }
                }
            }
        }
    }

    public partial class Matcher {

        static IMatcher _matcherPhase01_PlayerTurn;

        public static IMatcher Phase01_PlayerTurn {
            get {
                if(_matcherPhase01_PlayerTurn == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.Phase01_PlayerTurn);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherPhase01_PlayerTurn = matcher;
                }

                return _matcherPhase01_PlayerTurn;
            }
        }
    }
}
